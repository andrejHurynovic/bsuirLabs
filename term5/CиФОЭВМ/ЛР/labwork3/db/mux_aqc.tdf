--lpm_mux CASCADE_CHAIN="MANUAL" DEVICE_FAMILY="Cyclone III" IGNORE_CASCADE_BUFFERS="OFF" LPM_SIZE=5 LPM_WIDTH=8 LPM_WIDTHS=3 data result sel
--VERSION_BEGIN 13.0 cbx_lpm_mux 2013:06:12:18:03:40:SJ cbx_mgl 2013:06:12:18:04:42:SJ  VERSION_END


-- Copyright (C) 1991-2013 Altera Corporation
--  Your use of Altera Corporation's design tools, logic functions 
--  and other software and tools, and its AMPP partner logic 
--  functions, and any output files from any of the foregoing 
--  (including device programming or simulation files), and any 
--  associated documentation or information are expressly subject 
--  to the terms and conditions of the Altera Program License 
--  Subscription Agreement, Altera MegaCore Function License 
--  Agreement, or other applicable license agreement, including, 
--  without limitation, that your use is for the sole purpose of 
--  programming logic devices manufactured by Altera and sold by 
--  Altera or its authorized distributors.  Please refer to the 
--  applicable agreement for further details.



--synthesis_resources = lut 24 
SUBDESIGN mux_aqc
( 
	data[39..0]	:	input;
	result[7..0]	:	output;
	sel[2..0]	:	input;
) 
VARIABLE 
	muxlut_data0w[4..0]	: WIRE;
	muxlut_data1w[4..0]	: WIRE;
	muxlut_data2w[4..0]	: WIRE;
	muxlut_data3w[4..0]	: WIRE;
	muxlut_data4w[4..0]	: WIRE;
	muxlut_data5w[4..0]	: WIRE;
	muxlut_data6w[4..0]	: WIRE;
	muxlut_data7w[4..0]	: WIRE;
	muxlut_result0w	: WIRE;
	muxlut_result1w	: WIRE;
	muxlut_result2w	: WIRE;
	muxlut_result3w	: WIRE;
	muxlut_result4w	: WIRE;
	muxlut_result5w	: WIRE;
	muxlut_result6w	: WIRE;
	muxlut_result7w	: WIRE;
	muxlut_select0w[2..0]	: WIRE;
	muxlut_select1w[2..0]	: WIRE;
	muxlut_select2w[2..0]	: WIRE;
	muxlut_select3w[2..0]	: WIRE;
	muxlut_select4w[2..0]	: WIRE;
	muxlut_select5w[2..0]	: WIRE;
	muxlut_select6w[2..0]	: WIRE;
	muxlut_select7w[2..0]	: WIRE;
	result_node[7..0]	: WIRE;
	sel_ffs_wire[2..0]	: WIRE;
	sel_node[2..0]	: WIRE;
	w121w[3..0]	: WIRE;
	w123w[1..0]	: WIRE;
	w146w[0..0]	: WIRE;
	w169w[3..0]	: WIRE;
	w171w[1..0]	: WIRE;
	w194w[0..0]	: WIRE;
	w217w[3..0]	: WIRE;
	w219w[1..0]	: WIRE;
	w242w[0..0]	: WIRE;
	w25w[3..0]	: WIRE;
	w265w[3..0]	: WIRE;
	w267w[1..0]	: WIRE;
	w27w[1..0]	: WIRE;
	w290w[0..0]	: WIRE;
	w313w[3..0]	: WIRE;
	w315w[1..0]	: WIRE;
	w338w[0..0]	: WIRE;
	w361w[3..0]	: WIRE;
	w363w[1..0]	: WIRE;
	w386w[0..0]	: WIRE;
	w50w[0..0]	: WIRE;
	w73w[3..0]	: WIRE;
	w75w[1..0]	: WIRE;
	w98w[0..0]	: WIRE;
	w_mux_outputs119w[1..0]	: WIRE;
	w_mux_outputs167w[1..0]	: WIRE;
	w_mux_outputs215w[1..0]	: WIRE;
	w_mux_outputs23w[1..0]	: WIRE;
	w_mux_outputs263w[1..0]	: WIRE;
	w_mux_outputs311w[1..0]	: WIRE;
	w_mux_outputs359w[1..0]	: WIRE;
	w_mux_outputs71w[1..0]	: WIRE;

BEGIN 
	muxlut_data0w[] = ( data[32..32], data[24..24], data[16..16], data[8..8], data[0..0]);
	muxlut_data1w[] = ( data[33..33], data[25..25], data[17..17], data[9..9], data[1..1]);
	muxlut_data2w[] = ( data[34..34], data[26..26], data[18..18], data[10..10], data[2..2]);
	muxlut_data3w[] = ( data[35..35], data[27..27], data[19..19], data[11..11], data[3..3]);
	muxlut_data4w[] = ( data[36..36], data[28..28], data[20..20], data[12..12], data[4..4]);
	muxlut_data5w[] = ( data[37..37], data[29..29], data[21..21], data[13..13], data[5..5]);
	muxlut_data6w[] = ( data[38..38], data[30..30], data[22..22], data[14..14], data[6..6]);
	muxlut_data7w[] = ( data[39..39], data[31..31], data[23..23], data[15..15], data[7..7]);
	muxlut_result0w = ((w_mux_outputs23w[0..0] & (! w50w[0..0])) # (w_mux_outputs23w[1..1] & w50w[0..0]));
	muxlut_result1w = ((w_mux_outputs71w[0..0] & (! w98w[0..0])) # (w_mux_outputs71w[1..1] & w98w[0..0]));
	muxlut_result2w = ((w_mux_outputs119w[0..0] & (! w146w[0..0])) # (w_mux_outputs119w[1..1] & w146w[0..0]));
	muxlut_result3w = ((w_mux_outputs167w[0..0] & (! w194w[0..0])) # (w_mux_outputs167w[1..1] & w194w[0..0]));
	muxlut_result4w = ((w_mux_outputs215w[0..0] & (! w242w[0..0])) # (w_mux_outputs215w[1..1] & w242w[0..0]));
	muxlut_result5w = ((w_mux_outputs263w[0..0] & (! w290w[0..0])) # (w_mux_outputs263w[1..1] & w290w[0..0]));
	muxlut_result6w = ((w_mux_outputs311w[0..0] & (! w338w[0..0])) # (w_mux_outputs311w[1..1] & w338w[0..0]));
	muxlut_result7w = ((w_mux_outputs359w[0..0] & (! w386w[0..0])) # (w_mux_outputs359w[1..1] & w386w[0..0]));
	muxlut_select0w[] = sel_node[];
	muxlut_select1w[] = sel_node[];
	muxlut_select2w[] = sel_node[];
	muxlut_select3w[] = sel_node[];
	muxlut_select4w[] = sel_node[];
	muxlut_select5w[] = sel_node[];
	muxlut_select6w[] = sel_node[];
	muxlut_select7w[] = sel_node[];
	result[] = result_node[];
	result_node[] = ( muxlut_result7w, muxlut_result6w, muxlut_result5w, muxlut_result4w, muxlut_result3w, muxlut_result2w, muxlut_result1w, muxlut_result0w);
	sel_ffs_wire[] = ( sel[2..0]);
	sel_node[] = ( sel_ffs_wire[2..2], sel[1..0]);
	w121w[3..0] = muxlut_data2w[3..0];
	w123w[1..0] = muxlut_select2w[1..0];
	w146w[0..0] = muxlut_select2w[2..2];
	w169w[3..0] = muxlut_data3w[3..0];
	w171w[1..0] = muxlut_select3w[1..0];
	w194w[0..0] = muxlut_select3w[2..2];
	w217w[3..0] = muxlut_data4w[3..0];
	w219w[1..0] = muxlut_select4w[1..0];
	w242w[0..0] = muxlut_select4w[2..2];
	w25w[3..0] = muxlut_data0w[3..0];
	w265w[3..0] = muxlut_data5w[3..0];
	w267w[1..0] = muxlut_select5w[1..0];
	w27w[1..0] = muxlut_select0w[1..0];
	w290w[0..0] = muxlut_select5w[2..2];
	w313w[3..0] = muxlut_data6w[3..0];
	w315w[1..0] = muxlut_select6w[1..0];
	w338w[0..0] = muxlut_select6w[2..2];
	w361w[3..0] = muxlut_data7w[3..0];
	w363w[1..0] = muxlut_select7w[1..0];
	w386w[0..0] = muxlut_select7w[2..2];
	w50w[0..0] = muxlut_select0w[2..2];
	w73w[3..0] = muxlut_data1w[3..0];
	w75w[1..0] = muxlut_select1w[1..0];
	w98w[0..0] = muxlut_select1w[2..2];
	w_mux_outputs119w[] = ( muxlut_data2w[4..4], ((((! w123w[1..1]) # (w123w[0..0] & w121w[3..3])) # ((! w123w[0..0]) & w121w[2..2])) & ((w123w[1..1] # (w123w[0..0] & w121w[1..1])) # ((! w123w[0..0]) & w121w[0..0]))));
	w_mux_outputs167w[] = ( muxlut_data3w[4..4], ((((! w171w[1..1]) # (w171w[0..0] & w169w[3..3])) # ((! w171w[0..0]) & w169w[2..2])) & ((w171w[1..1] # (w171w[0..0] & w169w[1..1])) # ((! w171w[0..0]) & w169w[0..0]))));
	w_mux_outputs215w[] = ( muxlut_data4w[4..4], ((((! w219w[1..1]) # (w219w[0..0] & w217w[3..3])) # ((! w219w[0..0]) & w217w[2..2])) & ((w219w[1..1] # (w219w[0..0] & w217w[1..1])) # ((! w219w[0..0]) & w217w[0..0]))));
	w_mux_outputs23w[] = ( muxlut_data0w[4..4], ((((! w27w[1..1]) # (w27w[0..0] & w25w[3..3])) # ((! w27w[0..0]) & w25w[2..2])) & ((w27w[1..1] # (w27w[0..0] & w25w[1..1])) # ((! w27w[0..0]) & w25w[0..0]))));
	w_mux_outputs263w[] = ( muxlut_data5w[4..4], ((((! w267w[1..1]) # (w267w[0..0] & w265w[3..3])) # ((! w267w[0..0]) & w265w[2..2])) & ((w267w[1..1] # (w267w[0..0] & w265w[1..1])) # ((! w267w[0..0]) & w265w[0..0]))));
	w_mux_outputs311w[] = ( muxlut_data6w[4..4], ((((! w315w[1..1]) # (w315w[0..0] & w313w[3..3])) # ((! w315w[0..0]) & w313w[2..2])) & ((w315w[1..1] # (w315w[0..0] & w313w[1..1])) # ((! w315w[0..0]) & w313w[0..0]))));
	w_mux_outputs359w[] = ( muxlut_data7w[4..4], ((((! w363w[1..1]) # (w363w[0..0] & w361w[3..3])) # ((! w363w[0..0]) & w361w[2..2])) & ((w363w[1..1] # (w363w[0..0] & w361w[1..1])) # ((! w363w[0..0]) & w361w[0..0]))));
	w_mux_outputs71w[] = ( muxlut_data1w[4..4], ((((! w75w[1..1]) # (w75w[0..0] & w73w[3..3])) # ((! w75w[0..0]) & w73w[2..2])) & ((w75w[1..1] # (w75w[0..0] & w73w[1..1])) # ((! w75w[0..0]) & w73w[0..0]))));
END;
--VALID FILE
